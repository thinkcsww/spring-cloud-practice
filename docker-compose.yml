# version isn't needed as of 2020 for docker compose CLI. 
# All 2.x and 3.x features supported
version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:management # this will use the latest version of 1.23
    ports:
      - '15672:15672'
      - '5672:5672'
      - '15671:15671'
      - '5671:5671'
      - '4369:4368'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      my-network:
  config-service:
    image: config-service
    ports:
      - '8888:8888'
    environment:
      spring.rabbitmq.host: rabbitmq
    depends_on:
      - rabbitmq
    networks:
      my-network:
  discovery-service:
    image: discovery-service
    ports:
      - '8761:8761'
    # environment:
      # spring.cloud.config.uri: http://config-service:8888
    depends_on:
      - config-service
    networks:
      my-network:
  apigateway-service:
    image: apigateway-service
    ports:
      - '8000:8000'
    environment:
      spring.cloud.config.uri: http://config-service:8888
      # eureka.client.serviceUrl.defaultZone: http://discovery-service:8761/eureka
      # spring.rabbitmq.host: rabbitmq
    depends_on:
      - discovery-service
      - config-service
      - rabbitmq
      - zipkin
    networks:
      my-network:
  mariadb:
    image: mariadb
    ports:
      - '13306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: test1357
      MYSQL_DATABASE: mydb
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      my-network:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      my-network:
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.19.0.101
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.19.0.101
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      my-network:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - /Users/sun/Desktop/udemy/springcloud-inflearn/msa_with_spring_cloud-main/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      my-network:
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      my-network:
  user-service:
    image: user-service
    environment:
      spring.cloud.config.uri: http://config-service:8888
    depends_on:
      - discovery-service
      - config-service
      - rabbitmq
      - zipkin
    networks:
      my-network:
  order-service:
    image: order-service
    environment:
      spring.cloud.config.uri: http://config-service:8888
    depends_on:
      - discovery-service
      - config-service
      - rabbitmq
      - zipkin
    networks:
      my-network:
  catalog-service:
    image: catalog-service
    environment:
      spring.cloud.config.uri: http://config-service:8888
    depends_on:
      - discovery-service
      - config-service
      - rabbitmq
      - zipkin
    networks:
      my-network:
networks:
  my-network:
    ipam:
      config:
        - subnet: 172.19.0.0/16
volumes:
  mariadb-data:
